#pragma once
#include "JuceHeader.h"

/**
 * @file  AppMenu.h
 *
 * @brief  Defines the public interface for the AppMenu module, which creates
 *         an application menu component.
 *
 * This file is the only file in the AppMenu module that should be included in
 * outside sources.
 *
 * The AppMenu module displays an application launching menu. This menu displays
 * application shortcuts loaded from standard desktop entry files, and from a
 * JSON configuration file. The user can use this menu to launch applications,
 * or to focus the window of an application that was alreay launched through
 * this menu.
 *
 * The menu is constructed from folders generated from the JSON configuration
 * file. Each folder may contain any number of application shortcuts and
 * child folders. Folders may also have a list of application categories. All
 * desktop entries that share application categories with a folder will be
 * added to that folder as additional menu items.
 *
 * The menu structure is highly configurable, both through the apps.json
 * configuration file, and directly through the menu interface.  The user may
 * right click or use a keyboard shortcut to create popup context menus, which
 * can change the order of menu items, add new items, delete menu items, or
 * edit any of the properties of existing menu items.  The only significant
 * limitation is that menu items generated by desktop entries cannot be
 * reordered.  These will always be listed alphabetically within their folders,
 * after any menu items defined in the JSON file.
 * 
 * The AppMenu provides support for multiple display formats. The display
 * format defines the layout of the menu, and controls how user input events
 * are applied to the menu. The selected format may be dynamically changed.
 * Through the AppMenu::Settings interface, other objects may change the menu
 * format, and adjust various display properties for each menu format. This is
 * used by the Home Settings Page to allow the user to edit the menu format.
 */
namespace AppMenu
{
    /* ####################  Public Interface ########################### */
    /* ## All outside interaction with the AppMenu module should be    ## */
    /* ## through these functions.                                     ## */
    /* ################################################################## */
    /**
     * @brief  Defines the available menu implementations.  Each one (besides
     *         Invalid) has a namespace of the same name within the AppMenu 
     *         namespace where all of its classes are declared.
     */
    enum class Format
    {
        /* Displays the menu as vertical scrolling menu folder panels: */
        Scrolling,
        /* Displays the menu as pages of menu item grids: */
        Paged,
        /* The Format value returned if the menu is somehow null or invalid: */
        Invalid
    };
    
    /**
     * @brief  Creates an AppMenu::MainComponent, initialized with the menu
     *         format saved through AppMenu::Settings.
     *
     * @return  A pointer to a newly allocated and initialized 
     *          AppMenu::MainComponent.
     */
    juce::Component* createAppMenu();


    /**
     * @brief  Loads the menu format and menu format options.
     *
     * @see  AppMenu/ConfigFile.h
     */
    class ConfigFile;

    /**
     * @brief  The private SharedResource singleton used to read, store, and
     *         write the selected menu format and other menu options in the
     *         JSON configuration file.
     *
     * @see  AppMenu/Data/JSON/ConfigJSON.h     
     */
    class ConfigJSON;
}
